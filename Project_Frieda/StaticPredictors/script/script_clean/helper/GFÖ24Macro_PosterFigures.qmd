# Tasks

### - plot all variables that seem to be important for assessing change

### - we seem to have a highly dimensional problem here.

### - make a categorical variable for change and use this?

### - maps with proportional change per cell??

# Libraries

```{r}
rm(list = ls())
library(dplyr)
library(ggplot2)
library(randomForestSRC)
library(sf)
library(randomForestExplainer)
```

# Data

```{r}
dat <- readRDS("../../out/rds/Final_data.rds")
sf_dat <- readRDS("../../out/rds/presence_sf_list.rds")
names(sf_dat[[1]])
names(dat)
```

# Pre-processing

```{r}
hist(dat$log_R2_1, breaks = 300)
mean(dat$log_R2_1)
median(dat$log_R2_1)
range(dat$log_R2_1)


## Add trend column for plotting:
# Define your factor levels
factor_levels <- c("strong decrease (> halfing)", 
                   "weak decrease (< halfing)", 
                   "stable", 
                   "weak increase (< doubling)", 
                   "strong increase (> doubling)")

# Define the cutoff points for the ranges in log scale
cutoff_points <- c(-Inf, log(0.5), log(0.9), log(1.1), log(2), Inf)
dat2 <- dat

# Convert the log ratios to factor variables based on the ranges
dat2$trend <- cut(dat2$log_R2_1, breaks = cutoff_points, labels = factor_levels) 
dat2 <- dat2 %>% 
  rstatix::reorder_levels(trend, factor_levels)

sf2_list<-list()
for (i in seq_along(sf_dat)){
  sf1 <- sf_dat[[i]]
  sf1$tp <- as.factor(sf1$tp)
    sf2 <- left_join(sf1, dat2 %>% select(-area) %>% filter(dataset == names(sf_dat)[i])) %>%
      group_by(tp, cell_label) %>%
      mutate(mean_trend_cell = mean(log_R2_1, na.rm=T))
    
    sf2_list[[i]] <- sf2
}
```

# Test plot

```{r}
rm(sf_dat, sf2, sf1)

p_list <- list()
for (i in seq_along(sf2_list)){
  
  sf_test <- sf2_list[[i]] %>% select(cell_label, mean_trend_cell, tp)%>% na.omit() %>% unique()
p <-print(ggplot(sf_test) +
  aes(fill = mean_trend_cell) +
  geom_sf(size = 1.2) +
  scale_fill_distiller(palette = "PuOr", direction = 1) +
  theme_minimal() +
  facet_wrap(vars(tp)))

p_list[[i]] <- p
  
}

p1 <- p_list[[1]]
p2 <- p_list[[2]]
p3 <- p_list[[3]]
p4 <- p_list[[4]]


sf_test %>%
ggplot()+
  geom_sf(aes(fill = mean_trend_cell))


esquisse::esquisser(sf_test)

```

# Fig 1 & Fig 2

```{r}
# Plot number of species per trend per dataset
fig1 <- dat2 %>% 
    group_by(dataset, trend) %>% 
    summarise(n_sp = n_distinct(verbatim_name)) %>% 
ggplot(aes(y = n_sp, x = trend, fill = trend))+
    geom_col(col = "lightgrey")+
    facet_grid(~dataset)+
    theme_classic()+
  scale_fill_brewer(palette = "PuOr") +
    labs(title = "Trends ~ Nr of species") + 
  theme(
    axis.line = element_line(colour = "azure4",
    linetype = "solid"), axis.ticks = element_line(colour = "gray13"),
    panel.grid.major = element_line(colour = "gray97"),
    panel.grid.minor = element_line(linetype = "blank"), 
    axis.title = element_text(size = 16),
    axis.text = element_text(size = 10),
    axis.text.x = element_text(angle = 45, vjust = 0.9, hjust = 0.9),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 2),
    panel.background = element_rect(fill = NA),
    plot.background = element_rect(colour = NA),
    legend.position = "none") +
  labs(x = "Occupancy trend", y = "Number of Species",
    fill = NULL) 

fig1

# Plot Log Ratio ~ trend as check
## Overview of Log ratio ~ Trend / Mass just for visualization of the categories
fig2 <- ggplot(dat2) +
  aes(x = trend, y = log_R2_1, colour = trend, size = Mass) +
  geom_jitter(alpha = 0.4) +
  scale_color_manual(
    values = c(`strong decrease` = "#A50026",
    `weak decrease` = "#F88D51",
    stable = "#FFFFBF",
    `weak increase` = "#8FC3DD",
    `strong increase` = "#313695")
  ) +
  labs(
    y = "log ratio AOO",
    color = "Trend",
    size = "Body Mass"
  ) +
  theme_classic() +
  facet_wrap(vars(dataset))+
    theme(
    axis.line = element_line(colour = "azure4",
    linetype = "solid"), axis.ticks = element_line(colour = "gray13"),
    panel.grid.major = element_line(colour = "gray97"),
    panel.grid.minor = element_line(linetype = "blank"), 
    axis.title = element_text(size = 16),
    axis.text = element_text(size = 10),
    axis.text.x = element_text(angle = 45, vjust = 0.9, hjust = 0.9),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 2),
    panel.background = element_rect(fill = NA),
    plot.background = element_rect(colour = NA))
```

# Classification model

```{r}
discrete_m0 <- randomForestSRC::rfsrc(factor(trend) ~ ., dat2 %>% filter(tp == 1) %>% select(-tp, -verbatim_name, -log_R2_1, -Telfer_1_2))
numeric_m0 <- randomForestSRC::rfsrc(log_R2_1 ~ ., dat2 %>% filter(tp == 1) %>% select(-tp,-verbatim_name, -Telfer_1_2, -trend))
topvars1 <- randomForestSRC::vimp(discrete_m0)
#print(vimp(numeric_m0, importance = "permute", join = T))
plot(discrete_m0)
plot(numeric_m0)
plot(get.tree(discrete_m0, 10, target = "strong decrease", class.type = "bayes", ensemble = TRUE))
plot(get.tree(numeric_m0, 10, ensemble = TRUE))


 dat2 %>% filter(tp == 1) %>% group_by(dataset, trend) %>% summarise(n_sp = n_distinct(verbatim_name),
                                                                     prop_sp = round(n_distinct(verbatim_name)/Gamma, 2)) %>% distinct()

 
# Summary of trends 
dat2 %>% filter(tp == 1) %>% distinct(dataset, verbatim_name, trend, log_R2_1) %>% write.csv("../../Documents/documentation_methods/Trends.csv")


good_sp <- dat2 %>% filter(tp == 1 & trend == "increase") %>% group_by(dataset, tp) %>% summarise(n_sp = n_distinct(verbatim_name))
bad_sp <- dat2 %>% filter(tp == 1 & trend == "decrease")%>% group_by(dataset, tp) %>% summarise(n_sp = n_distinct(verbatim_name))

```

```{r}
 dat2 %>% filter(trend == "increase") %>% group_by(dataset, tp) %>% 
 ggplot(aes(y = log_R2_1, x = D_AOO_a))+
 geom_point()+
 geom_smooth()+
 facet_wrap(~dataset)+
 theme_classic()

dat2 %>% filter(trend == "decrease") %>% group_by(dataset, tp) %>% 
 ggplot(aes(y = log_R2_1, x = D_AOO_a))+
 geom_point()+
 geom_smooth()+
 facet_wrap(~dataset)+
 theme_classic()

dat2 %>% filter(trend == "stable") %>% group_by(dataset, tp) %>% 
 ggplot(aes(y = log_R2_1, x = D_AOO_a))+
 geom_point()+
 geom_smooth()+
 facet_wrap(~dataset)+
 theme_classic()

#####

 dat2 %>% filter(trend == "increase") %>% group_by(dataset, tp) %>% 
 ggplot(aes(y = log_R2_1, x = Mass))+
 geom_point()+
 geom_smooth()+
 facet_wrap(~dataset,  scales = "free")+
 theme_classic()

dat2 %>% filter(trend == "decrease") %>% group_by(dataset, tp) %>% 
 ggplot(aes(y = log_R2_1, x = Mass))+
 geom_point()+
 geom_smooth()+
 facet_wrap(~dataset, scales = "free")+
 theme_classic()

dat2 %>% filter(trend == "stable") %>% group_by(dataset, tp) %>% 
 ggplot(aes(y = log_R2_1, x = Mass))+
 geom_point()+
 geom_smooth()+
 facet_wrap(~dataset, scales = "free")+
 theme_classic()

#####
```

# Random Forests:

```{r}
gc()
library(caret); library(ranger); library(dplyr); library(ggplot2)
```

## Data Prep:

```{r}
dat <- readRDS("../../out/rds/Final_data.rds")
# Exclude variables:
exclude_vars <- c("m_AOO_a", "Total_area", "Total_Ncells", "rel_occ_Ncells", "Gamma", "Range.Size", "GlobRangeSize_m2", "mean_cell_length", "increment2", "RL_Category", "atlas_xmax", "area", "b_AOO_a", "mean_relAOO", "occ_Ncells", "mean_prob_cooccur")

atlas_vars <- c("Total_area_samp", "GammaSR", "mean_area", "atlas_lengthMinRect", "atlas_widthMinRect", "atlas_elonMinRect", "atlas_circ", "atlas_bearingMinRect", "atlas_bearing", "AtlasCOG_long", "AtlasCOG_lat")

dat_red <- dat %>% select(!all_of(c(exclude_vars)))
names(dat_red)


## Log Ratio 1) Future Change 2) Past change

dat1 <- dat_red %>% filter(tp == 1) %>% select(-tp, -Telfer_1_2, -verbatim_name)
dat2 <- dat_red %>% filter(tp == 2) %>% select(-tp, -Telfer_1_2, -verbatim_name)

dfs_list <- list(dat1, dat2)

```

### Group predictors by hypothesis

```{r}
names(dat1)
cols_atlas <- c(#"dataset", 
                "Total_area_samp", "mean_area", "atlas_lengthMinRect", "atlas_widthMinRect", "atlas_elonMinRect", "atlas_circ", "atlas_bearingMinRect", "atlas_bearing", "AtlasCOG_long", "AtlasCOG_lat")

setdiff(names(dat1), cols_atlas)


cols_geo <- c("D_AOO_a", # Fractal dimension
            "Total_Ncells_samp",
             "rel_nsDist", "rel_maxDist", "rel_ewDist",
             "rel_elonRatio", "rel_circNorm", "rel_relCirc", "rel_lin",  # Species distribution geometric features
             "minDist_toBorder_border", "minDist_toBorder_centr", # Distances
             "maxDist_toBorder_border", "maxDist_toBorder_centr",
             "bearingMinRect", "bearing", "elonMinRect","circ",
             "lengthMinRect","widthMinRect",
             "Southernness", "Westernness", 
             "moran", "x_intercept", # Spatial autocorrelation
             # "atlas_circNorm", "atlas_relCirc", # Atlas predictors
             "datasetBirds_atlas_EBBA", "datasetBirds_atlas_Japan", "datasetBirds_Atlas_New_York", "datasetBirds_Atlas_Czechia",
            # captures most of the geometry of the atlases (highly correlated)
            "Dist_centroid_to_COG", "sp_centr_lon", "sp_centr_lat")

setdiff(names(dat1), c(cols_geo, cols_atlas))

# Traits
cols_trait <- c("rel_AOO", # Occupancy 
             "AOO",
             "IUCNLC", "IUCNEN",  "IUCNNT" , "IUCNVU", 
             # "IUCN", # Global red list categories
             "FP", # Evolutionary relationships
             "HWI", # Dispersal
             "Mass", 
             #"Habitat", "Habitat.Density", "Migration", "Trophic.Level", "Trophic.Niche", "Primary.Lifestyle", # Life history traits
             "HabitatDesert","HabitatForest","HabitatGrassland","HabitatHuman Modified","HabitatMarine", "HabitatRiverine","HabitatRock","HabitatShrubland","HabitatWetland","HabitatWoodland","Habitat.Density2","Habitat.Density3","
Migration2","Migration3",
"Trophic.LevelHerbivore","Trophic.LevelOmnivore","Trophic.LevelScavenger",
"Trophic.NicheFrugivore","Trophic.NicheGranivore","Trophic.NicheHerbivore aquatic","Trophic.NicheHerbivore terrestrial","Trophic.NicheInvertivore","Trophic.NicheNectarivore","Trophic.NicheOmnivore","Trophic.NicheScavenger","Trophic.NicheVertivore",
"Primary.LifestyleAquatic","Primary.LifestyleGeneralist","Primary.LifestyleInsessorial","Primary.LifestyleTerrestrial",
             "GlobRangeSize_km2", # Global range size (Breeding & Resident)
             "sd_PC1", "sd_PC2") # Climatic Niche Breadth

setdiff(names(dat1), c(cols_geo, cols_atlas, cols_trait))


# Diversity
cols_div <- c("GammaSR","AlphaSR_sp", "BetaSR_sp", #Gamma, Alpha and beta diversity
             "Dist_centroid_to_COG",  # Distance from species centroid to center of gravity of the atlas
             # "CenterOfGravity_Atlas_lat", # latitude of center of gravity of the atlas
             "sp_centr_lon","sp_centr_lat") # species distribution centroid coordinates) # Distance from species centroid to center of gravity of the atlas


```

## Run Forests & calc MSE decrease

```{r}
library(caret)

# set seeds:
seeds <- c(42)

# empty lists:
models_list<-list()
varImp_list <- list()
seeds_res_list <- list()
seeds_varImp_list <- list()
seeds_models_list <- list()
predictions <- list()
seeds_predictions_list <- list()
for (seed in seq_along(seeds)) {
  
  # Multiple seeds to check robustness of results:
  set.seed(seeds[seed])
  
  for (dd in seq_along(dfs_list)){
    
    # Train & Test splits:
    model_df <- dfs_list[[dd]] %>% na.omit()
    samp <- sample(nrow(model_df), 0.8 * nrow(model_df))
    train <- model_df[samp, ]; dim(train) 
    test <- model_df[-samp, ]; dim(test) 
    
    # Model:
    tictoc::tic()
    model <- train(log_R2_1 ~ .,
                   data = train,
                   method = "ranger",
                   importance ="permutation",
                   num.trees = 1000,
                   oob.error = T)
    tictoc::toc() #265.77 sec elapsed
    
    models_list[[dd]] <- model$finalModel
    
    
    pred_observed <- data.frame(Predicted = predict(model, test), Observed = test$log_R2_1, seed = seeds[seed], data = if_else(dd == 1, "log_R_future", "log_R_past"))
    predictions[[dd]] <- pred_observed
    
    # MSE Decrease: 
    varImpFrame <- as.data.frame(model$finalModel$variable.importance) 
    names(varImpFrame) <- "MeanMSEdecrease"
    
    varImpFrame$data <- if_else(dd == 1, "log_R_future", "log_R_past")
    varImpFrame$var <- row.names(varImpFrame)
    varImpFrame$seed <- seeds[seed]
    row.names(varImpFrame) <- NULL
    
    varImpFrame2 <- varImpFrame %>% 
      mutate(group = case_when(
    var %in% cols_geo ~ "geometry",
    var %in% cols_trait ~ "traits",
    var %in% cols_div ~ "diversity",
    var %in% cols_atlas ~ "atlas"))
    
    varImp_list[[dd]] <- varImpFrame2
  
  }
  seeds_varImp_list[[seed]] <- plyr::rbind.fill(varImp_list)
  seeds_predictions_list[[seed]] <- plyr::rbind.fill(predictions)
  seeds_models_list[[seed]] <- models_list
  
}

mse_df <- plyr::rbind.fill(seeds_varImp_list)

# Figure:
mse_df %>% 
  group_by(data) %>%
  filter(data %in% c("log_R_future")) %>%
  filter(MeanMSEdecrease > 0.007) %>%
  
  ggplot2::ggplot(aes(y = forcats::fct_reorder(var, MeanMSEdecrease), x = MeanMSEdecrease, fill = group))+
  geom_col()+
  facet_grid(~seed)+
  xlab("Decrease of out-of-bag MSE")+
  ylab("Predictor")+
  theme_classic()+
  scale_fill_brewer(palette = "Set3")+
  labs(title = "Future Change")


mse_df %>% 
  group_by(data) %>%
  filter(data %in% c( "log_R_past")) %>%
  filter(MeanMSEdecrease > 0.007) %>%
  
  ggplot2::ggplot(aes(y = forcats::fct_reorder(var, MeanMSEdecrease), x = MeanMSEdecrease, fill = group))+
  geom_col()+
  facet_grid(~seed)+
  xlab("Decrease of out-of-bag MSE")+
  ylab("Predictor")+
  theme_classic()+
  scale_fill_brewer(palette = "Set3")+
  labs(title = "Past Change")




FutureChangeTopPred <- mse_df %>%
 filter(MeanMSEdecrease >= 0.0105) %>%
 filter(data %in% "log_R_future") %>%
 filter(seed == 42) %>%
 ggplot(aes(x = MeanMSEdecrease, fill = group, y = forcats::fct_reorder(var, MeanMSEdecrease))) +
  geom_col() +
  scale_fill_brewer(palette = "Pastel1", direction = 1) +
  theme_classic()+ 
  theme(axis.line = element_line(colour = "azure3",
    linetype = "solid"), axis.ticks = element_line(linetype = "blank")) +
  labs(title = "Future Change - Top 20 predictors",x = NULL, x = "Mean decrease in MSE")


PastChangeTopPred <- mse_df %>%
 filter(MeanMSEdecrease >= 0.0087) %>%
 filter(data %in% "log_R_past") %>%
 filter(seed == 42) %>%
 ggplot(aes(x = MeanMSEdecrease, fill = group, y = forcats::fct_reorder(var, MeanMSEdecrease))) +
  geom_col() +
  scale_fill_brewer(palette = "Pastel1", direction = 1) +
  theme_classic()+
  theme(axis.line = element_line(colour = "azure3",
    linetype = "solid"), axis.ticks = element_line(linetype = "blank")) +
  labs(title = "Past Change - Top 20 predictors", y = NULL, x = "Mean decrease in MSE")


save.image("../../out/RData/PosterPrepRF.RData")
```

## Predicted vs. observed plots

```{r}
pred_observed = seeds_predictions_list[[1]] %>% 
ggplot(aes(x = Observed, y = Predicted, colour = data)) +
  geom_point(shape = "circle", size = 1.5) +
  geom_smooth(method = "loess")+
  scale_color_manual(
    values = c(log_R_future = "#C95E14",
    log_R_past = "#560180")
  ) +
  theme_classic() +
  theme(legend.position = "none")+
  geom_hline(yintercept = 0)+
  geom_vline(xintercept = 0)+
  ylim(-2,2) + theme(legend.position = "right")

```
